<Window
  x:Class="VPet.Plugin.ModMaker.Views.ModEdit.PetEdit.PetEditWindow"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:local="clr-namespace:VPet.Plugin.ModMaker.Views.ModEdit.PetEdit"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:pu="https://opensource.panuon.com/wpf-ui"
  xmlns:vm="clr-namespace:VPet.Plugin.ModMaker.ViewModels.ModEdit.PetEdit"
  Title="PetEditWindow"
  Width="800"
  Height="450"
  mc:Ignorable="d">
  <d:Window.DataContext>
    <vm:PetEditWindowVM />
  </d:Window.DataContext>
  <Window.Resources>
    <Style
      x:Key="Label_ThouchRect"
      BasedOn="{StaticResource {x:Type Label}}"
      TargetType="Label">
      <Setter Property="Visibility" Value="Collapsed" />
      <Setter Property="HorizontalAlignment" Value="Left" />
      <Setter Property="VerticalAlignment" Value="Top" />
      <Setter Property="HorizontalContentAlignment" Value="Center" />
      <Setter Property="VerticalContentAlignment" Value="Center" />
      <Setter Property="BorderThickness" Value="1" />
      <Setter Property="Background" Value="#19FF0000" />
      <Setter Property="BorderBrush" Value="Red" />
      <Setter Property="Width" Value="{Binding Width.Value}" />
      <Setter Property="Height" Value="{Binding Height.Value}" />
      <Style.Triggers>
        <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Mode=Self}}" Value="True">
          <Setter Property="Visibility" Value="Visible" />
        </DataTrigger>
      </Style.Triggers>
    </Style>
  </Window.Resources>
  <Grid>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="Auto" />
      <ColumnDefinition />
    </Grid.ColumnDefinitions>
    <Grid>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition />
      </Grid.RowDefinitions>
      <Grid>
        <!--
          Width="{Binding Pet.Value.Image.Value.Width}"
          Height="{Binding Pet.Value.Image.Value.Height}"
        -->
        <Image
          d:Height="250"
          d:Width="250"
          Source="C:\Users\HKW\Desktop\测试肖像文件夹\10500.png" />
        <Label
          Content="TouchHeadRect"
          DataContext="{Binding Pet.Value.TouchHeadRect.Value}"
          Tag="{Binding IsChecked, ElementName=ToggleButton_TouchHead}">
          <Label.Style>
            <Style BasedOn="{StaticResource Label_ThouchRect}" TargetType="Label">
              <Setter Property="Margin">
                <Setter.Value>
                  <MultiBinding Converter="{StaticResource MarginConverter}">
                    <Binding Path="X.Value" />
                    <Binding Path="Y.Value" />
                  </MultiBinding>
                </Setter.Value>
              </Setter>
            </Style>
          </Label.Style>
        </Label>
        <Label
          Content="TouchRaisedRect_Happy"
          DataContext="{Binding Pet.Value.TouchRaisedRect.Value.Happy.Value}"
          Tag="{Binding IsChecked, ElementName=ToggleButton_TouchRaisedRect_HappyState}">
          <Label.Style>
            <Style BasedOn="{StaticResource Label_ThouchRect}" TargetType="Label">
              <Setter Property="Margin">
                <Setter.Value>
                  <MultiBinding Converter="{StaticResource MarginConverter}">
                    <Binding Path="X.Value" />
                    <Binding Path="Y.Value" />
                  </MultiBinding>
                </Setter.Value>
              </Setter>
            </Style>
          </Label.Style>
        </Label>
        <Label
          Content="TouchRaisedRect_Nomal"
          DataContext="{Binding Pet.Value.TouchRaisedRect.Value.Nomal.Value}"
          Tag="{Binding IsChecked, ElementName=ToggleButton_TouchRaisedRect_NomalState}">
          <Label.Style>
            <Style BasedOn="{StaticResource Label_ThouchRect}" TargetType="Label">
              <Setter Property="Margin">
                <Setter.Value>
                  <MultiBinding Converter="{StaticResource MarginConverter}">
                    <Binding Path="X.Value" />
                    <Binding Path="Y.Value" />
                  </MultiBinding>
                </Setter.Value>
              </Setter>
            </Style>
          </Label.Style>
        </Label>
        <Label
          Content="TouchRaisedRect_PoorCondition"
          DataContext="{Binding Pet.Value.TouchRaisedRect.Value.PoorCondition.Value}"
          Tag="{Binding IsChecked, ElementName=ToggleButton_TouchRaisedRect_PoorConditionState}">
          <Label.Style>
            <Style BasedOn="{StaticResource Label_ThouchRect}" TargetType="Label">
              <Setter Property="Margin">
                <Setter.Value>
                  <MultiBinding Converter="{StaticResource MarginConverter}">
                    <Binding Path="X.Value" />
                    <Binding Path="Y.Value" />
                  </MultiBinding>
                </Setter.Value>
              </Setter>
            </Style>
          </Label.Style>
        </Label>
        <Label
          Content="TouchRaisedRect_Ill"
          DataContext="{Binding Pet.Value.TouchRaisedRect.Value.Ill.Value}"
          Tag="{Binding IsChecked, ElementName=ToggleButton_TouchRaisedRect_IllState}">
          <Label.Style>
            <Style BasedOn="{StaticResource Label_ThouchRect}" TargetType="Label">
              <Setter Property="Margin">
                <Setter.Value>
                  <MultiBinding Converter="{StaticResource MarginConverter}">
                    <Binding Path="X.Value" />
                    <Binding Path="Y.Value" />
                  </MultiBinding>
                </Setter.Value>
              </Setter>
            </Style>
          </Label.Style>
        </Label>
        <Label
          Width="5"
          Height="5"
          Background="Red"
          Content="RaisePoint_Happy"
          DataContext="{Binding Pet.Value.RaisePoint.Value.Happy.Value}"
          Tag="{Binding IsChecked, ElementName=ToggleButton_RaisePoint_Happy}">
          <Label.Style>
            <Style BasedOn="{StaticResource Label_ThouchRect}" TargetType="Label">
              <Setter Property="Margin">
                <Setter.Value>
                  <MultiBinding Converter="{StaticResource MarginConverter}">
                    <Binding Path="X.Value" />
                    <Binding Path="Y.Value" />
                  </MultiBinding>
                </Setter.Value>
              </Setter>
            </Style>
          </Label.Style>
        </Label>
        <Label
          Width="5"
          Height="5"
          Background="Red"
          Content="RaisePoint_Nomal"
          DataContext="{Binding Pet.Value.RaisePoint.Value.Nomal.Value}"
          Tag="{Binding IsChecked, ElementName=ToggleButton_RaisePoint_Nomal}">
          <Label.Style>
            <Style BasedOn="{StaticResource Label_ThouchRect}" TargetType="Label">
              <Setter Property="Margin">
                <Setter.Value>
                  <MultiBinding Converter="{StaticResource MarginConverter}">
                    <Binding Path="X.Value" />
                    <Binding Path="Y.Value" />
                  </MultiBinding>
                </Setter.Value>
              </Setter>
            </Style>
          </Label.Style>
        </Label>
        <Label
          Width="5"
          Height="5"
          Background="Red"
          Content="RaisePoint_PoorCondition"
          DataContext="{Binding Pet.Value.RaisePoint.Value.PoorCondition.Value}"
          Tag="{Binding IsChecked, ElementName=ToggleButton_RaisePoint_PoorCondition}">
          <Label.Style>
            <Style BasedOn="{StaticResource Label_ThouchRect}" TargetType="Label">
              <Setter Property="Margin">
                <Setter.Value>
                  <MultiBinding Converter="{StaticResource MarginConverter}">
                    <Binding Path="X.Value" />
                    <Binding Path="Y.Value" />
                  </MultiBinding>
                </Setter.Value>
              </Setter>
            </Style>
          </Label.Style>
        </Label>
        <Label
          Width="5"
          Height="5"
          Background="Red"
          Content="RaisePoint_Ill"
          DataContext="{Binding Pet.Value.RaisePoint.Value.Ill.Value}"
          Tag="{Binding IsChecked, ElementName=ToggleButton_RaisePoint_Ill}">
          <Label.Style>
            <Style BasedOn="{StaticResource Label_ThouchRect}" TargetType="Label">
              <Setter Property="Margin">
                <Setter.Value>
                  <MultiBinding Converter="{StaticResource MarginConverter}">
                    <Binding Path="X.Value" />
                    <Binding Path="Y.Value" />
                  </MultiBinding>
                </Setter.Value>
              </Setter>
            </Style>
          </Label.Style>
        </Label>
      </Grid>
      <!--<Grid Grid.Row="1" >
        <TextBox/>
      </Grid>-->
    </Grid>
    <Grid Grid.Column="1">
      <ScrollViewer VerticalScrollBarVisibility="Auto">
        <StackPanel>
          <ToggleButton
            x:Name="ToggleButton_TouchHead"
            Padding="5"
            HorizontalContentAlignment="Stretch"
            DataContext="{Binding Pet.Value.TouchHeadRect.Value}">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
              </Grid.ColumnDefinitions>
              <Label
                HorizontalContentAlignment="Center"
                VerticalContentAlignment="Center"
                Background="{x:Null}"
                Content="TouchHead:" />
              <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                  <RowDefinition />
                  <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Label Background="{x:Null}" Content="x:" />
                <pu:NumberInput
                  Grid.Column="1"
                  d:Value="100"
                  Value="{Binding X.Value, Mode=TwoWay}" />
                <Label
                  Grid.Column="2"
                  Background="{x:Null}"
                  Content="y:" />
                <pu:NumberInput
                  Grid.Column="3"
                  d:Value="100"
                  Value="{Binding Y.Value, Mode=TwoWay}" />
                <Label
                  Grid.Row="1"
                  Background="{x:Null}"
                  Content="w:" />
                <pu:NumberInput
                  Grid.Row="1"
                  Grid.Column="1"
                  d:Value="100"
                  Value="{Binding Width.Value, Mode=TwoWay}" />
                <Label
                  Grid.Row="1"
                  Grid.Column="2"
                  Background="{x:Null}"
                  Content="h:" />
                <pu:NumberInput
                  Grid.Row="1"
                  Grid.Column="3"
                  d:Value="100"
                  Value="{Binding Height.Value, Mode=TwoWay}" />
              </Grid>
            </Grid>
          </ToggleButton>
          <Expander Header="TouchRaisedRect">
            <StackPanel>
              <ToggleButton
                x:Name="ToggleButton_TouchRaisedRect_HappyState"
                Padding="5"
                HorizontalContentAlignment="Stretch"
                d:IsChecked="True"
                DataContext="{Binding Pet.Value.TouchRaisedRect.Value.Happy.Value}">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                  </Grid.ColumnDefinitions>
                  <Label
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    Background="{x:Null}"
                    Content="HappyState:" />
                  <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                      <RowDefinition />
                      <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Label Background="{x:Null}" Content="x:" />
                    <pu:NumberInput
                      Grid.Column="1"
                      d:Value="100"
                      Value="{Binding X.Value, Mode=TwoWay}" />
                    <Label
                      Grid.Column="2"
                      Background="{x:Null}"
                      Content="y:" />
                    <pu:NumberInput
                      Grid.Column="3"
                      d:Value="100"
                      Value="{Binding Y.Value, Mode=TwoWay}" />
                    <Label
                      Grid.Row="1"
                      Background="{x:Null}"
                      Content="w:" />
                    <pu:NumberInput
                      Grid.Row="1"
                      Grid.Column="1"
                      d:Value="100"
                      Value="{Binding Width.Value, Mode=TwoWay}" />
                    <Label
                      Grid.Row="1"
                      Grid.Column="2"
                      Background="{x:Null}"
                      Content="h:" />
                    <pu:NumberInput
                      Grid.Row="1"
                      Grid.Column="3"
                      d:Value="100"
                      Value="{Binding Height.Value, Mode=TwoWay}" />
                  </Grid>
                </Grid>
              </ToggleButton>
              <ToggleButton
                x:Name="ToggleButton_TouchRaisedRect_NomalState"
                Padding="5"
                HorizontalContentAlignment="Stretch"
                d:IsChecked="True"
                DataContext="{Binding Pet.Value.TouchRaisedRect.Value.Nomal.Value}">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                  </Grid.ColumnDefinitions>
                  <Label
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    Background="{x:Null}"
                    Content="NomalState:" />
                  <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                      <RowDefinition />
                      <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Label Background="{x:Null}" Content="x:" />
                    <pu:NumberInput
                      Grid.Column="1"
                      d:Value="100"
                      Value="{Binding X.Value, Mode=TwoWay}" />
                    <Label
                      Grid.Column="2"
                      Background="{x:Null}"
                      Content="y:" />
                    <pu:NumberInput
                      Grid.Column="3"
                      d:Value="100"
                      Value="{Binding Y.Value, Mode=TwoWay}" />
                    <Label
                      Grid.Row="1"
                      Background="{x:Null}"
                      Content="w:" />
                    <pu:NumberInput
                      Grid.Row="1"
                      Grid.Column="1"
                      d:Value="100"
                      Value="{Binding Width.Value, Mode=TwoWay}" />
                    <Label
                      Grid.Row="1"
                      Grid.Column="2"
                      Background="{x:Null}"
                      Content="h:" />
                    <pu:NumberInput
                      Grid.Row="1"
                      Grid.Column="3"
                      d:Value="100"
                      Value="{Binding Height.Value, Mode=TwoWay}" />
                  </Grid>
                </Grid>
              </ToggleButton>
              <ToggleButton
                x:Name="ToggleButton_TouchRaisedRect_PoorConditionState"
                Padding="5"
                HorizontalContentAlignment="Stretch"
                d:IsChecked="True"
                DataContext="{Binding Pet.Value.TouchRaisedRect.Value.PoorCondition.Value}">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                  </Grid.ColumnDefinitions>
                  <Label
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    Background="{x:Null}"
                    Content="PoorConditionState:" />
                  <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                      <RowDefinition />
                      <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Label Background="{x:Null}" Content="x:" />
                    <pu:NumberInput
                      Grid.Column="1"
                      d:Value="100"
                      Value="{Binding X.Value, Mode=TwoWay}" />
                    <Label
                      Grid.Column="2"
                      Background="{x:Null}"
                      Content="y:" />
                    <pu:NumberInput
                      Grid.Column="3"
                      d:Value="100"
                      Value="{Binding Y.Value, Mode=TwoWay}" />
                    <Label
                      Grid.Row="1"
                      Background="{x:Null}"
                      Content="w:" />
                    <pu:NumberInput
                      Grid.Row="1"
                      Grid.Column="1"
                      d:Value="100"
                      Value="{Binding Width.Value, Mode=TwoWay}" />
                    <Label
                      Grid.Row="1"
                      Grid.Column="2"
                      Background="{x:Null}"
                      Content="h:" />
                    <pu:NumberInput
                      Grid.Row="1"
                      Grid.Column="3"
                      d:Value="100"
                      Value="{Binding Height.Value, Mode=TwoWay}" />
                  </Grid>
                </Grid>
              </ToggleButton>
              <ToggleButton
                x:Name="ToggleButton_TouchRaisedRect_IllState"
                Padding="5"
                HorizontalContentAlignment="Stretch"
                d:IsChecked="True"
                DataContext="{Binding Pet.Value.TouchRaisedRect.Value.Ill.Value}">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                  </Grid.ColumnDefinitions>
                  <Label
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    Background="{x:Null}"
                    Content="IllState:" />
                  <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                      <RowDefinition />
                      <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Label Background="{x:Null}" Content="x:" />
                    <pu:NumberInput
                      Grid.Column="1"
                      d:Value="100"
                      Value="{Binding X.Value, Mode=TwoWay}" />
                    <Label
                      Grid.Column="2"
                      Background="{x:Null}"
                      Content="y:" />
                    <pu:NumberInput
                      Grid.Column="3"
                      d:Value="100"
                      Value="{Binding Y.Value, Mode=TwoWay}" />
                    <Label
                      Grid.Row="1"
                      Background="{x:Null}"
                      Content="w:" />
                    <pu:NumberInput
                      Grid.Row="1"
                      Grid.Column="1"
                      d:Value="100"
                      Value="{Binding Width.Value, Mode=TwoWay}" />
                    <Label
                      Grid.Row="1"
                      Grid.Column="2"
                      Background="{x:Null}"
                      Content="h:" />
                    <pu:NumberInput
                      Grid.Row="1"
                      Grid.Column="3"
                      d:Value="100"
                      Value="{Binding Height.Value, Mode=TwoWay}" />
                  </Grid>
                </Grid>
              </ToggleButton>
            </StackPanel>
          </Expander>
          <Expander Header="RaisePoint">
            <StackPanel>
              <ToggleButton
                x:Name="ToggleButton_RaisePoint_Happy"
                Padding="5"
                HorizontalContentAlignment="Stretch"
                DataContext="{Binding Pet.Value.RaisePoint.Value.Happy.Value}">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                  </Grid.ColumnDefinitions>
                  <Label
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    Background="{x:Null}"
                    Content="HappyState:" />
                  <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                      <RowDefinition />
                      <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Label Background="{x:Null}" Content="x:" />
                    <pu:NumberInput
                      Grid.Column="1"
                      d:Value="100"
                      Value="{Binding X.Value, Mode=TwoWay}" />
                    <Label
                      Grid.Column="2"
                      Background="{x:Null}"
                      Content="y:" />
                    <pu:NumberInput
                      Grid.Column="3"
                      d:Value="100"
                      Value="{Binding Y.Value, Mode=TwoWay}" />
                  </Grid>
                </Grid>
              </ToggleButton>
              <ToggleButton
                x:Name="ToggleButton_RaisePoint_Nomal"
                Padding="5"
                HorizontalContentAlignment="Stretch"
                DataContext="{Binding Pet.Value.RaisePoint.Value.Nomal.Value}">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                  </Grid.ColumnDefinitions>
                  <Label
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    Background="{x:Null}"
                    Content="NomalState:" />
                  <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                      <RowDefinition />
                      <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Label Background="{x:Null}" Content="x:" />
                    <pu:NumberInput
                      Grid.Column="1"
                      d:Value="100"
                      Value="{Binding X.Value, Mode=TwoWay}" />
                    <Label
                      Grid.Column="2"
                      Background="{x:Null}"
                      Content="y:" />
                    <pu:NumberInput
                      Grid.Column="3"
                      d:Value="100"
                      Value="{Binding Y.Value, Mode=TwoWay}" />
                  </Grid>
                </Grid>
              </ToggleButton>
              <ToggleButton
                x:Name="ToggleButton_RaisePoint_PoorCondition"
                Padding="5"
                HorizontalContentAlignment="Stretch"
                DataContext="{Binding Pet.Value.RaisePoint.Value.PoorCondition.Value}">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                  </Grid.ColumnDefinitions>
                  <Label
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    Background="{x:Null}"
                    Content="PoorConditionState:" />
                  <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                      <RowDefinition />
                      <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Label Background="{x:Null}" Content="x:" />
                    <pu:NumberInput
                      Grid.Column="1"
                      d:Value="100"
                      Value="{Binding X.Value, Mode=TwoWay}" />
                    <Label
                      Grid.Column="2"
                      Background="{x:Null}"
                      Content="y:" />
                    <pu:NumberInput
                      Grid.Column="3"
                      d:Value="100"
                      Value="{Binding Y.Value, Mode=TwoWay}" />
                  </Grid>
                </Grid>
              </ToggleButton>
              <ToggleButton
                x:Name="ToggleButton_RaisePoint_Ill"
                Padding="5"
                HorizontalContentAlignment="Stretch"
                DataContext="{Binding Pet.Value.RaisePoint.Value.Ill.Value}">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                  </Grid.ColumnDefinitions>
                  <Label
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    Background="{x:Null}"
                    Content="IllState:" />
                  <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                      <RowDefinition />
                      <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Label Background="{x:Null}" Content="x:" />
                    <pu:NumberInput
                      Grid.Column="1"
                      d:Value="100"
                      Value="{Binding X.Value, Mode=TwoWay}" />
                    <Label
                      Grid.Column="2"
                      Background="{x:Null}"
                      Content="y:" />
                    <pu:NumberInput
                      Grid.Column="3"
                      d:Value="100"
                      Value="{Binding Y.Value, Mode=TwoWay}" />
                  </Grid>
                </Grid>
              </ToggleButton>
            </StackPanel>
          </Expander>
        </StackPanel>
      </ScrollViewer>
    </Grid>
  </Grid>
</Window>
